for (i in seq_along(fun_vec)) {
x <- fun_list[[fun_vec[[i]]]](x)
}
x
}
df
strsplit(gsub(" ", "", df$rules), ",")
unlist(Map(call_funs, df$data, strsplit(gsub(" ", "", df$rules), ","))))
unlist(Map(call_funs, df$data, strsplit(gsub(" ", "", df$rules), ",")))
apply(setupInd[strategy_ind_id ==1, c(4:7)], 1, function (x)
apply(x, 1, function(y) testInd(y)(x)))
setupInd
apply(setupInd, 1, function (x)
apply(x, 1, function(y) testInd(y)(x)))
apply(setupInd, 1, function (x)
apply(x, 1, function(y) y)
apply(setupInd, 1, function (x) apply(x, 1, function (y) y))
apply(setupInd, 1, function (x) {apply(x, 1, function (y) y)})
apply(setupInd, 1, function (x) t <<- x)
apply(setupInd, 1, function (x)  x)
apply(setupInd, 1, function (x)  class(x))
apply(setupInd, 1, function (x)  class(x) <<- "ind")
apply(setupInd, 1, function (x)  class(x) <<- "ind" %>% testInd(x) )
apply(setupInd, 1, function (x)  setDT(x))
setupInd
CLASS(setupInd)
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
setupInd   <<- setDT(trendInd)
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
i   <<- setDT(trendInd)
}
class(setupInd)  <- "ind"
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
i   <<- setDT(trendInd)
print(class(i))
}
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
i   <<- setDT(trendInd)
print(class(i))
apply(i, 1, function(x) x)
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = i[,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = i[,3]),
label                = id[,4])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = i[,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = i[,3]),
label                = i[,4])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
setupInd
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = z[i,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = z[i,3]),
label                = z[i,4])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
z[i,1]
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
print( z[i,1] )
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name  = z[i,1])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = z[i,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = zi[i,3]),
label                = z[i,4])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = z[i,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = z[i,3]),
label                = z[i,4])
}
}
class(setupInd)  <- "ind"
get_Strategy(setupInd)
z
is.data.table(z)
z[1,2]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
apply(setupTrend[i,5], 1, function(x) ApplyIndicators(x))
# ------------------------------------------------------------------------------
}
}
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
# apply(setupTrend[i,5], 1, function(x) ApplyIndicators(x))
# ------------------------------------------------------------------------------
}
}
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
# apply(setupTrend[i,5], 1, function(x) ApplyIndicators(x))
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(class_name, class_ind)
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
apply(setupTrend[i,5], 1, function(x) ApplyIndicators(x[1]))
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(class_name, class_ind)
get_Strategy(trend_name, trend_ind)
View(setupTrend)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
applyIndicators(              # apply indicators
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
applyIndicators(setupTrend[1,5],SPL.AX)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
applyIndicators(setupTrend[i,5],SPL.AX)
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
rm(dXema_mktdata_ind)
paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <<-
applyIndicators(setupTrend[i,5],SPL.AX)
paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <<-
applyIndicators(setupTrend[1,5],SPL.AX)
setupTrend
paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <<-
applyIndicators(setupTrend[1,5],SPL.AX)
g[[paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <<-
applyIndicators(setupTrend[1,5],SPL.AX)]]
setupTrend
paste(setupTrend[1,5], "mktdata", "ind", sep = "_")
applyIndicators(setupTrend[1,5],SPL.AX)
g[[paste(setupTrend[1,5], "mktdata", "ind", sep = "_")]] <<-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <<-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
paste(setupTrend[1,5], "mktdata", "ind", sep = "_")
paste(setupTrend[1,5], "mktdata", "ind", sep = "_") <-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
g[[paste(setupTrend[1,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[1,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------
}
}
rm(dXEMA_mktdata_ind)
rm(gXEMA_mktdata_ind)
Apply_Indicators
rm(Apply_Indicators)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[1,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(              # apply indicators
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
View(dXEMA_mktdata_ind)
rm(dXEMA_mktdata_ind)
rm(gXEMA_mktdata_ind)
rm(gXema_mktdata_ind)
rm(nXema_mktdata_ind)
rm(nXsma_mktdata_ind)
rm(gXsma_mktdata_ind)
rm(dXsma_mktdata_ind)
setupTrend
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------
}
}
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------
for (i in 1:nrow(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------
apply(setupInd[strategy_ind_id ==i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
rows = function(x) lapply(seq_len(nrow(x)), function(i) lapply(x,function(c) c[i]))
rows = function(x) lapply(seq_len(nrow(x)), function(i) lapply(x,function(c) c[i]))
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
print(A$x + A$y * A$z)
}
tab
setupInd
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
Indicators(A)
}
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
indicators(A)
}
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
testInd(A)
}
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
testInd(A[,c(4:7)])
}
tab = data.frame(x = 1:3, y=2:4, z=3:5)
for (A in rows(tab)) {
print(A)
}
for (A in rows(testInd)) {
print(A)
}
testInd
testInd
setupInd
for (A in rows(setupInd[c(1:4),])) {
print(A)
}
for (A in rows(setupInd[c(1:4),])) {
class(A)
}
for (A in rows(setupInd[c(1:4),])) {
class(A)
}
for (A in rows(setupInd[c(1:4),])) {
setDT(A)
}
for (A in rows(setupInd[c(1:4),])) {
setDT(A) %>% class(a)
}
for (A in rows(setupInd[c(1:4),])) {
setDT(A) %>% class(A)
}
for (A in rows(setupInd[c(1:4),])) {
setDT(A) %>% class(A)
}
for (A in rows(setupInd[c(1:4),])) {
setDT(A)
}
rm(A)
for (A in rows(setupInd[c(1:4),])) {
setDT(A)
}
A
setupInd[c(1:4),]
