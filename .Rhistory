View(setupTrend)
apply(setupTrend[5,5], 1, function(x) setup(x))
apply(setupTrend[5\6,5], 1, function(x) setup(x))
apply(setupTrend[6,5], 1, function(x) setup(x))
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
browser()
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[1,5])$signals)
ApplySignals(setupTrend[1,5])
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
setupTrend[1,5]
paste(setupTrend[i,5], "mktdata", "ind", sep = "_")
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]]
setupTrend[i,5])$indicators
dXema$indicators
View(nXema_mktdata_ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy <- function(trendName, trendInd) {
UseMethod("get_Strategy")
}
# this is the implementation for "trend" objects,
# you could have more for other "class" objects
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[1,5])$signals)
ApplySignals(setupTrend[1,5])
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
i
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
ApplySignals(setupTrend[i,5])
}
}
}
setupTrend[i,5]
setupTrend[1,5]
string(setupTrend[i,5])
string(setupTrend[1,5])
ApplySignals(string(setupTrend[1,5]))
ApplySignals(setupTrend[1,5])
ApplySignals("dXema")
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
ApplySignals(string(setupTrend[i,5]))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
# ------------------------------------------------------------------------------
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
setupTrend[i, 5]
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = setupTrend[i,5],
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applySignals(
strategy           = setupTrend[1,5],
mktdata            = SPL.AX)
applySignals(setupTrend[1,5], mktdata            = SPL.AX)
setupTrend[1,5]
rm(dXema)
applySignals(setupTrend[1,5], mktdata            = SPL.AX)
setupTrend[1,5]
setupTrend
paste(setupTrend$abb, tolower(setupTrend$i.name))
paste0(setupTrend$abb, tolower(setupTrend$i.name))
paste0(setupTrend[i,3], tolower(setupTrend[i,5]))
paste0(setupTrend[1,3], tolower(setupTrend[1,5]))
paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
applySignals(
strategy           = paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
mktdata            = SPL.AX)
paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
applySignals(
strategy           = paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
mktdata            = SPL.AX)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
i <- 1
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
str(getStrategy(setupTrend[i,5])$indicators)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
ProjectTemplate::migrate.project()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
View(setupInd)
View(dT.sig)
View(dT.test1)
View(dT.test3)
View(dT.z.sig)
View(dT.strategy)
dT.strategy[dT.sig, allow.cartesian = T]
dT.strategy[dT.sig][dt_ma, allow.cartesian = T]
dt_ma
setkey(dt_ma, id)
dT.strategy[dT.sig][dt_ma, allow.cartesian = T]
glimpse(dt_ma)
glimpse(dT.sig)
)dt_ma$id <- as.numeric(row.names.data.frame(dt_ma))
)dt_ma$id <- as.numeric(row.names.data.frame(dt_ma)
dt_ma$id <- as.numeric(row.names.data.frame(dt_ma))
glimpse(dT.sig)
dT.strategy[dT.sig][dt_ma, allow.cartesian = T]
View(dt_ma)
dT.strategy[dT_ma][dT.sig, allow.cartesian = T]
dT.strategy[dt_ma][dT.sig, allow.cartesian = T]
dT.strategy[dt_ma , allow.cartesian = T]
dT.strategy
dT.indMetrics
trend_name
trend_name[dt_ma][dT.sig, allow.cartesian = T]
trend_name[dt_ma]
trend_name[dt_ma][dT.sig]
trend_name
dt_ma
dT.sig
setkey(trend_name, id)
setkey(dt_ma, id)
setkey(dT.sig, id)
trend_name[dt_ma][dT.sig]
trend_name[dt_ma][dT.sig, allow.cartesian = "T"]
trend_name[dT.sig][dt_ma, allow.cartesian = "T"]
trend_name[dT.sig, allow.cartesian = T][dt_ma, allow.cartesian = "T"]
trend_name[dT.sig, allow.cartesian = T][dt_ma, allow.cartesian = T]
trend_name[dT.sig, allow.cartesian = T]
trend_name
trend_name[dt_ma]
trend_name[dt_ma, allow.cartesian = T]
dt_ma[trend_name, allow.cartesian = T]
setkey(dt_ma, trend_id)
dt_ma
dT.indMetrics
setkey(trend_name, trend_id)
dT.sig
setkey(dT.sig, id)
dT.sig[trend_name, allow.cartesian = T]
dt_ma
dt_ma$trend_id = 1
setkey(dt_ma,trend_id)
dT.sig[dt_ma][trend_name, allow.cartesian = T]
glimpse(dT.sig[dt_ma][trend_name, allow.cartesian = T])
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T]
names(trend_signal)[16] <- "strategy_ind_id"
trend_signal
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
setupTrend[i, 5]
applySignals(
strategy                = strategy.st,
mktdata                 = SPL.AX)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
dXsma_mktdata_sig  <-  (
strategy                = strategy.st
mktdata                 = dXsma_mktdata_ind)
gXema_mktdata_sig  <- applySignals(
strategy                = strategy.st,
mktdata                 = gXema_mktdata_ind)
dXsma_mktdata_sig  <-  (
strategy                = strategy.st
mktdata                 = dXsma_mktdata_ind)
dXsma_mktdata_sig  <-  (
strategy                = strategy.st
mktdata                 = dXsma_mktdata_ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
str(getStrategy(dXema)$signals)
str(getStrategy(dXsma)$signals)
str(getStrategy(gXsma)$signals)
get_Strategy(trend_name, trend_ind, trend_signal)
x[5]
formula
label
Label
cross
str(getStrategy(setupTrend[1,5])$indicators)
dxEMA_mktdata_ind
formula
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
?shquote
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
set_Signals <- function(name, columns, formula, label, cross, Label) {
browser()
print(paste("strategy.st = ", strategy.st, sep = " "))
add.signal(strategy.st,
name                  = name,
arguments             = list(
columns             = c("ema.020","ema.050","ema.100", "ema.200"),
formula            = "(ema.020 > ema.050 &
ema.050 > ema.100 &
ema.100 > ema.200)",
label               = label,
cross               = cross),
label                 = Label)
}
get_Strategy(trend_name, trend_ind, trend_signal)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
str(getStrategy(setupTrend[i,5])$indicators)
str(getStrategy(setupTrend[1,5])$indicators)
applySignals(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
applySignals(
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
str(getStrastr(getStrategy(setupTrend[i,5])$indicators)tegy(setupTrend[1,5])$indicators)
str(getStrategy(setupTrend[1,5])$indicators)
applySignals(
strategy                = setupTrend[1,5],
mktdata                 = SPL.AX)
strategy.st
Q
