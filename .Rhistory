plot_time_series(
.date_var    = Date,
.value       = Weekly_Sales,
.color_var   = id,
.smooth      = TRUE,
.facet_ncol  = 3,
.interactive = FALSE
)
g1
# 3.0 FROM SCRATCH ----
# - ggplot2 is covered in DS4B 101-R Week 4
walmart_sales_weekly %>%
ggplot(aes(Date, Weekly_Sales, color = id, group = id)) +
geom_line() +
geom_smooth(
aes(Date, Weekly_Sales),
inherit.aes = FALSE,
se = FALSE
) +
facet_wrap(
facets = ~ id,
scales = "free_y",
ncol   = 2
) +
theme_minimal() +
theme(legend.position = "bottom")
# 4.0 CYBERPUNK STYLE ----
# - Customizing ggplots is covered in DS4B 101-R Week 4
# - Credit: https://github.com/R-CoderDotCom/cyberpunk/blob/main/R/cyberpunklines.R
# * Setup a Color Palette ----
clrs <- colorRampPalette(c("#00ff9f", "#00b8ff", "#001eff", "#bd00ff", "#d600ff"))(7)
scales::show_col(clrs)
clr_bg   <- "black"
clr_bg2  <- "gray10"
clr_grid <- "gray30"
clr_text <- "#d600ff"
# * Setup a ggplot theme ----
theme_cyberpunk <- function() {
theme(
# Plot / Panel
plot.background = element_rect(fill = clr_bg, colour = clr_bg),
# plot.margin = margin(1.5, 2, 1.5, 1.5, "cm"),
panel.background = element_rect(fill = clr_bg, color = clr_bg),
# Grid
panel.grid = element_line(colour = clr_grid, size = 1),
panel.grid.major = element_line(colour = clr_grid, size = 1),
panel.grid.minor = element_line(colour = clr_grid, size = 1),
axis.ticks.x = element_line(colour = clr_grid, size = 1),
axis.line.y = element_line(colour = clr_grid, size = 0.5),
axis.line.x = element_line(colour = clr_grid, size = 0.5),
# Text
plot.title = element_text(colour = clr_text),
plot.subtitle = element_text(colour = clr_text),
axis.text = element_text(colour = clr_text),
axis.title = element_text(colour = clr_text),
# Legend
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_text(colour = clr_text),
legend.text = element_text(colour = "gray80", size = 12, face = "bold"),
# Strip
strip.background = element_rect(fill = clr_bg2, color = clr_bg2)
)
}
# * Make Custom ggplot ----
g_cyberpunk <- g1 +
geom_area(position = "identity", alpha = 0.5) +
geom_line(aes(color = id), size = 1) +
scale_color_manual(values = clrs) +
geom_smooth(
aes(Date, Weekly_Sales),
inherit.aes = FALSE,
se = FALSE
) +
scale_y_continuous(labels = scales::dollar) +
# facet_wrap(facets = NULL) +
labs(title = "Cyberpunk 2077 Theme", subtitle = "Time Series Plot") +
theme_cyberpunk()
g_cyberpunk
# * Make Interactive plotly ----
ggplotly(g_cyberpunk)
source('~/Documents/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(bb_20_disp_diff)
plot_time_series(bb_20_disp_diff)
dt20_bb_disp
dt20_bb_disp <- data.table(bb_20_disp_diff, keep.rownames = TRUE)
plot_time_series(dt20_bb_disp)
glimpse(dt20_bb_disp)
walmart_sales_weekly
dt20_bb_disp %>%
plot_time_series(
.date_var    = Index,
.value       = Delt.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt20_bb_disp %>%
plot_time_series(
.date_var    = Index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
glimpse(dt20_bb_disp)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)+
theme_cyberpunk()
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)+
theme_cyberpunk()
g1 <- dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
g_cyberpunk <- g1 +
geom_area(position = "identity", alpha = 0.5) +
geom_line(aes(color = id), size = 1) +
scale_color_manual(values = clrs) +
geom_smooth(
aes(Date, Weekly_Sales),
inherit.aes = FALSE,
se = FALSE
) +
scale_y_continuous(labels = scales::dollar) +
# facet_wrap(facets = NULL) +
labs(title = "Cyberpunk 2077 Theme", subtitle = "Time Series Plot") +
theme_cyberpunk()
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.1.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
scales::show_col(clrs)
clrs <- colorRampPalette(c("#00ff9f", "#00b8ff", "#001eff", "#bd00ff", "#d600ff"))(7)
scales::show_col(clrs)
g_cyberpunk <- g1 +
geom_area(position = "identity", alpha = 0.5) +
geom_line(aes(color = id), size = 1) +
scale_color_manual(values = clrs) +
geom_smooth(
aes(Date, Weekly_Sales),
inherit.aes = FALSE,
se = FALSE
) +
scale_y_continuous(labels = scales::dollar) +
# facet_wrap(facets = NULL) +
labs(title = "Cyberpunk 2077 Theme", subtitle = "Time Series Plot") +
theme_cyberpunk()
clr_bg   <- "black"
clr_bg2  <- "gray10"
clr_grid <- "gray30"
clr_text <- "#d600ff"
g_cyberpunk <- g1 +
geom_area(position = "identity", alpha = 0.5) +
geom_line(aes(color = id), size = 1) +
scale_color_manual(values = clrs) +
geom_smooth(
aes(Date, Weekly_Sales),
inherit.aes = FALSE,
se = FALSE
) +
scale_y_continuous(labels = scales::dollar) +
# facet_wrap(facets = NULL) +
labs(title = "Cyberpunk 2077 Theme", subtitle = "Time Series Plot") +
theme_cyberpunk()
ggplotly(g_cyberpunk)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.1.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
source('~/Documents/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dt20_bb_disp <- data.table(bb_20_disp_diff, keep.rownames = TRUE)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
scales::show_col(clrs)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.1.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
source('~/Documents/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/Documents/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dt20_bb_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt_bb20_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
)
dt_bb20_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) + theme_cyberpunk()
renderPlotly({
ggplotly(
dt_bb20_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
)
})
renderPlotly(
{
ggplotly(
dt_bb20_disp %>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
)
}
)
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
save(SPL.AX, file  = here::here("SPL.AX/", "SPL.AX.rda"))
save(SPL.AX, file  = here::here("SPL-Dashboard/SPL.AX/", "SPL.AX.rda"))
saveRDS(SPL.AX,                    file  = here::here("rds/", "SPL.AX.rds"))
saveRDS(SPL.AX,                    file  = here::here("SPL-Dashboard/rds/", "SPL.AX.rds"))
class(xtsPrice)
xtsPrice
xtsPrices
xtsPrice
xtsPrices
xtsPrices("2020")
xtsPrices["2020"]
xtsPrices["2012::2019"]
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
dt_bb20_disp[paste("2012", "2012",sep = "::")]
dt_bb20_disp[paste0("2012", "2012",sep = "::")]
bb_20_disp_diff
bb_20_disp_diff[paste("2012", "2012",sep = "::")]
renderPlotly(
{xts_bb20_disp
ggplotly(setDT(
xts_bb20_disp
[paste(format(input$dateRange2.2[1][+1]), format(input$dateRange2.2[2]),sep = "::")],
keep.rownames = TRUE)
%>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
)
}
)
renderPlotly(
{xts_bb20_disp
ggplotly(setDT(
xts_bb20_disp
[paste(format(input$dateRange2.2[1][+1]), format(input$dateRange2.2[2]),sep = "::")],
keep.rownames = TRUE)
%>%
plot_time_series(
.date_var    = index,
.value       = Delt.0.arithmetic,
.smooth      = TRUE,
.interactive = FALSE
) +
theme_cyberpunk()
)
}
)
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
saveRDS(dt_bb20_disp,              file  = here::here("rds/", "dt_bb20_disp.rds"))
saveRDS(dt_bb20_disp,              file  = here::here("SPL-Dashboard/rds/", "dt_bb20_disp.rds"))
# ------------------------------------------------------------------------------
saveRDS(xts_bb20_disp,             file  = here::here("rds/", "xts_bb20_disp.rds"))
saveRDS(xts_bb20_disp,             file  = here::here("SPL-Dashboard/rds/", "xts_bb20_disp.rds"))
xts_bb20_disp      <- cbind(SPL.AX, bb.20,disp, dispDiff)[,c(7:12)]
dt_bb20_disp       <- data.table(xts_bb20_disp, keep.rownames = TRUE)
xts_bb20_disp      <- cbind(SPL.AX, bb.20,disp, dispDiff)[,c(7:12)]
dt_bb20_disp       <- data.table(xts_bb20_disp, keep.rownames = TRUE)
saveRDS(dt_bb20_disp,              file  = here::here("rds/", "dt_bb20_disp.rds"))
saveRDS(dt_bb20_disp,              file  = here::here("SPL-Dashboard/rds/", "dt_bb20_disp.rds"))
# ------------------------------------------------------------------------------
saveRDS(xts_bb20_disp,             file  = here::here("rds/", "xts_bb20_disp.rds"))
saveRDS(xts_bb20_disp,             file  = here::here("SPL-Dashboard/rds/", "xts_bb20_disp.rds"))
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
renderPlot({
x <- tk_xts(price())
chartSeries(x,
theme = 'black',
subset =  paste(format(input$dateRange2.2[1][+1]), format(input$dateRange2.2[2]),sep = "::"),
TA = "addBBands();addVo();addCMF();addZLEMA()")   #Year 2016 To Present
})
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
View(xts_bb20_disp)
glimpse(xts_bb20_disp)
names(xts_bb20_disp)
dt_bb20_disp
names(dt_bb20_disp)[6:7] <- c("disp", "disp_diff")
dt_bb20_disp
xts_bb20_disp      <- cbind(SPL.AX, bb.20,disp, dispDiff)[,c(7:12)]
dt_bb20_disp       <- data.table(xts_bb20_disp, keep.rownames = TRUE)
names(dt_bb20_disp)[6:7] <- c("pct", "delta")
saveRDS(dt_bb20_disp,              file  = here::here("rds/", "dt_bb20_disp.rds"))
saveRDS(dt_bb20_disp,              file  = here::here("SPL-Dashboard/rds/", "dt_bb20_disp.rds"))
# ------------------------------------------------------------------------------
saveRDS(xts_bb20_disp,             file  = here::here("rds/", "xts_bb20_disp.rds"))
saveRDS(xts_bb20_disp,             file  = here::here("SPL-Dashboard/rds/", "xts_bb20_disp.rds"))
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
View(xts_bb20_disp)
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
colnames(xts_bb20_disp)[6:7] <- c("pct", "delta")
View(xts_bb20_disp)
colnames(xts_bb20_disp)[5:6] <- c("pct", "delta")
dt_bb20_disp
max(dt_bb20_disp[,6])
max(na.omit(dt_bb20_disp[,6]))
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
sprintf("%03d", disp_max)
disp_max <- max(na.omit(dt_bb20_disp[,6]))
sprintf("%03d", disp_max)
sprintf("%03f", disp_max)
sprintf("%05f", disp_max)
sprintf(disp_max, fmt = '%#.2f')
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
sprintf("%f", dt_bb20_disp[,7])
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
scales::label_percent(dt_bb20_disp)
scales::label_percentdt_bb20_disp[,7])
scales::label_percent(dt_bb20_disp[,7])
percent(dt_bb20_disp[,7]))
percent(dt_bb20_disp[,7])
percent(xts_bb20_disp[,7])
min(na.omit(dt_bb20_disp[,7]))
percent(min(na.omit(dt_bb20_disp[,7])))
flexdashboard::renderValueBox({
delt_min <- percent(min(na.omit(dt_bb20_disp[,7])))
flexdashboard::valueBox(
paste0("Min Delta: ", as.character(delt_min)),
color = ifelse(disp_max > 0, "teal", "red"),
icon = "ion-cash"
)
})
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
dt_bb20_disp[integer(nrow(dt_bb20_disp)),6]
integer(nrow(dt_bb20_disp))
percent(dt_bb20_disp[as.integer(nrow(dt_bb20_disp)),6])
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
library(stats)
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
source('~/Documents/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
percent(stats::median(na.omit(dt_bb20_disp[,6])))
dt_bb20_disp[, 6]
class(dt_bb20_disp[, 6])
glimpse(dt_bb20_disp[, 6])
na.omit(dt_bb20_disp[,6]))
na.omit(dt_bb20_disp[,6])
median.zoo( na.omit(xts_bb20_disp[,6]))
percent(median.zoo( na.omit(xts_bb20_disp[,6])))
percent(median.zoo( na.omit(xts_bb20_disp[,5])))
percent(median.zoo( na.omit(xts_bb20_disp[,7])))
percent(median.zoo( na.omit(xts_bb20_disp[,5])))
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
max(xts_bb20_disp[,5])
max(na.omit(xts_bb20_disp[,5]))
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
################################################################################
## Step 99.02: Processing                                                    ###
################################################################################
rmarkdown::run("./SPL-Dashboard/Flexdashboard.Rmd")
