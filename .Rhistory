dT.test
dT.test[i.id==1]
dT.test[i.id==1 & i.id.1 = 1]
dT.test[i.id==1 & i.id.1 == 1]
View(dT.sig)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dT.test2
is.data.table(dT.test2)
is.data.table(dT.test12)
is.data.table(dT.test1)
is.data.table(dT.test)
dT.test2[,c(10:17)]
dT.test1
dT.test1[, c(9, 11:13)]
dT.test1[i.id.1==1, c(9, 11:13)]
dT.test1
dT.test1[i.id == 1 & i.id.1==1, c(9, 11:13)]
View(dT.strategy)
lapply(dT.strategy, function(x) x$name)
lapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[x])
sapply(dT.strategy, function(x) x[i])
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[,x])
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[x,])
mapply(dT.strategy, function(x) x[x,])
vapply(dT.strategy, function(x) x[x,])
vapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[x,])
sapply(dT.strategy, function(x) x)
vapply(dT.strategy, function(x) x)
mapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x)
lapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[1,])
sapply(dT.strategy, function(x) x[,1])
sapply(dT.strategy, function(x) x[[1,]])
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x$id)
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x$name)
lapply(dT.strategy, function(x) x$name)
vapply(dT.strategy, function(x) x$name)
vapply(dT.strategy, function(x) x)
apply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[[2]])
sapply(dT.strategy, function(x) x[[,2]])
sapply(dT.strategy, function(x) x[[,1]])
sapply(dT.strategy, function(x) x[[1]])
sapply(dT.strategy, function(x) x[[1,1]])
sapply(dT.strategy, function(x) x[[1]][[,1]])
sapply(dT.strategy, function(x) x[[1]][,1])
sapply(dT.strategy, function(x) x[[1]])
sapply(dT.strategy, function(x) x[[1]])[,1]
sapply(dT.strategy, function(x) x[[1]])[[,1]]
sapply(dT.strategy, function(x) x[[1]])
sapply(dT.strategy, function(x) x[[]])
sapply(dT.strategy, function(x) x)
View(dT.test2)
View(dT.test1)
View(dT.test)
View(dT.test1)
View(dT.test)
View(dT.ind)
View(dT.indMetrics)
sapply(dT.strategy, function(x) x)
dT.ind
dT.ind[dT.indMetrics]
dT.ind[dT.indMetrics, allow.cartesian = T]
dT.ind
dT.indMetrics
setkey(dT.indMetrics, fk)
dT.ind[dT.indMetrics]
dT.ind[dT.indMetrics, allow.cartesian = T]
dT.indMetrics[dT.indMetrics]
dT.indMetrics[dT.indMetrics, allow.cartesian = T]
dT.indMetrics[dT.ind, allow.cartesian = T]
dT.indMetrics[dT.ind, allow.cartesian = T][,c(7,3:5)]
dT.indMetrics[dT.ind, allow.cartesian = T][i.id==1,c(7,3:5)]
sapply(dT.indMetrics[dT.ind, allow.cartesian = T][i.id==1,c(7,3:5)], function(x) x)
indicators(sapply(dT.indMetrics[dT.ind, allow.cartesian = T][i.id==1,c(7,3:5)], function(x) x))
trendName <- "dXema"
indicators(sapply(dT.indMetrics[dT.ind, allow.cartesian = T][i.id==1,c(7,3:5)], function(x) x))
indicators(sapply(dT.indMetrics[dT.ind, allow.cartesian = T][i.id==1,c(7,3:5)], function(x) as.list(x)))
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dT.test3
str(dT.test3)
glimpse(dT.test3)
sapply(dT.test3, function(x) x)
sapply(dT.test3, testInd(x))
sapply(dT.test3, function(x) testInd(x))
sapply(dT.test3, function(x) x)
testInd("EMA" "close" "20"  "020")
testInd("EMA", "close", "20",  "020")
testInd("EMA")
sapply(dT.test3, function(x) "x", testInd(x))
sapply(dT.test3, function(x) "x", x)
strategy.st
dT.test3
cbind(strategy.st, dT.test3)
sapply(dT.test3, function(x) "x", testInd(x))
sapply(dT.test3, testInd(x))
sapply(dT.test3, testInd(cbind(strategy.st,x)))
dT.test3 <- dT.indMetrics[
dT.ind, allow.cartesian = T
dT.test3 <- dT.indMetrics[
dT.ind, allow.cartesian = T]
dT.test3
dT.test2
dT.indMetrics
dT.indMetrics[dT.ind]
dT.strategy[dT.indMetrics][dT.ind]
dT.strategy[dT.indMetrics][dT.ind, allow.cartesian = T]
dT.strategy[dT.indMetrics, allow.cartesian = T][dT.ind, allow.cartesian = T]
dT.strategy[dT.indMetrics, allow.cartesian = T][dT.ind, allow.cartesian = T][i.id.1 ==1]
dT.strategy[dT.indMetrics, allow.cartesian = T][dT.ind, allow.cartesian = T][id ==1 & i.id.1 ==1]
dT.strategy[dT.indMetrics, allow.cartesian = T][dT.ind, allow.cartesian = T][id ==1 & i.id.1 ==1, c(3,12, 8:10)]
z<-dT.strategy[dT.indMetrics, allow.cartesian = T][dT.ind, allow.cartesian = T][id ==1 & i.id.1 ==1, c(3,12, 8:10)]
sapply(z, testInd(x))
sapply(z, testInd(z))
z
z[1,]
is.data.table(z)
sapply(z, indicators(z))
apply(z, 1, function(x)
indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(nXema)$indicators)
dT.strategy
dT.test3
dT.test2
sapply(dT.test2[,4], function(x) x)
sapply(dT.test1[,4], function(x) x)
dT.test
sapply(dT.test2, function(x) x)
sapply(dT.test3, function(x) x)
dT.test2
dT.test1
View(dT.strategy)
View(dT.name)
lapply(dT.strategy, function(x){ lapply(dT.ind, function(x,y) x, y)})
lapply(dT.strategy$name, function(x){ lapply(dT.ind$name, function(x,y) x, y)})
lapply(dT.strategy$name, function(x){ lapply(dT.ind$name, function(y) x, y)})
sapply(dT.strategy$name, function(x){sapply(dT.ind$name, function(x,y) x, y)})
sapply(dT.strategy$name, function(x){
sapply(dT.ind$name,  function(x,y) {
sapply(dT.indMetrics$name, function(x,y,z) x, y, z)}))
sapply(dT.strategy$name, function(x){
sapply(dT.ind$name,  function(x,y) {
sapply(dT.indMetrics$name, function(x,y,z) x, y, z)})
View(dT.indMetrics)
View(dT.metrics)
sapply(dT.strategy$name,
function(x){sapply(dT.ind$name,
function(x,y) {sapply(dT.indMetrics$name,
function(x,y,z) x, y, z)})})
sapply(dT.strategy$name,
function(x){sapply(dT.ind$name,
function(x,y) {sapply(dT.indMetrics$name,
function(x,y,z) x)})})
sapply(dT.strategy$name,
function(x){sapply(dT.ind$name,
function(x,y) {sapply(dT.indMetrics$name,
function(x,y,z) x,y,z)})})
sapply(dT.strategy$name,
function(x){sapply(dT.ind$name,
function(x,y) {sapply(dT.indMetrics$name,
function(x,y,z) unlist(x,y,z)})})
sapply(dT.strategy$name,
function(x){sapply(dT.ind$name,
function(x,y) {sapply(dT.indMetrics$name,
function(x,y,z) unlist(x,y,z)})})
lapply(dT.strategy$name,
function(x){lapply(dT.ind$name,
function(x,y) {lapply(dT.indMetrics$name,
function(x,y,z) x,y,z})})
lapply(dT.strategy$name,
function(x){lapply(dT.ind$name,
function(x,y) {lapply(dT.indMetrics$name,
function(x,y,z) x,y,z)})})
unlist
lapply(dT.strategy$name,
function(x){lapply(dT.ind$name,
function(x,y) {lapply(dT.indMetrics$name,
function(x,y,z) x,y,z)})}))
apply(z, 1, function(x)
indicators(
x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4]))
str(getStrategy(nXema)$indicators)
lapply(
lapply(dT.indMetric, function(z) dT.indMetric[1, ]),
head(dT.ind), 1
),
dT.strategy
)
lapply(
lapply(dT.indMetric, function(z) dT.indMetric[1, ]),
head(dT.ind), 1
),
dT.strategy$name
)
lapply(lapply(lapply(dT.indMetric, function(z) dT.indMetric[1, ]),dT.ind function(y) dT.ind[1, ])dT.strategy function(x) x)
lapply(lapply(lapply(dT.indMetric, function(z) dT.indMetric[1, ]),dT.ind function(y) dT.ind[1, ])dT.strategy) function(x) x)
lapply(dT.strategy) function(x) x)
lapply(dT.strategy function(x) x)
sapply(dT.strategy, function(x) x)
sapply(dT.strategy, function(x) x[1,])
sapply(dT.strategy, function(x) dT.strategy[1,])
sapply(dT.strategy, function(x) t(dT.strategy[1,]))
sapply(dT.strategy, function(x) t(dT.strategy[3,]))
sapply(dT.strategy, function(x) (dT.strategy[3,]))
sapply(dT.strategy, function(x) (dT.strategy))
sapply(dT.strategy, function(x) x)
sapply(dT.strategy[,3], function(x) x)
sapply(dT.ind[,3], function(y) sapply(dT.strategy[,3], function(x) x,y)
sapply(dT.strategy[,3], function(x) x)
lapply(dT.ind, function(d){ lapply(dT.strategy, function(a,b) a, b)})
sapply(dT.ind, function(d){ sapply(dT.strategy, function(a,b) a, b)})
sapply(dT.strategy, function(d){ sapply(dT.ind, function(a,b) a, b)})
t(sapply(dT.ind, function(d){ sapply(dT.strategy, function(a,b) a, b)}))
t(sapply(dT.strategy, function(d){ sapply(dT.ind, function(a,b) a, b)}))
sapply(dt.indMetrics, function(a){
sapply(dT.ind,    function(b,c){
sapply(dT.strategy, function(a,b,c) a, b,c)})}
sapply(dt.indMetrics, function(a){
sapply(dT.ind,    function(b,c){
sapply(dT.strategy, function(a,b,c) a, b,c)})})
sapply(dt.indMetrics, function(a){
sapply(dT.ind,        function(b,c){
sapply(dT.strategy,   function(a,b,c) {a, b,c})})})
t(
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a,b,c})
})
t(
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a,b,c})})}))
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a,b,c})
})
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a,b,c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {a,b,c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {a})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(a,c) {c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b,c) {
sapply(dT.strategy,   function(a,b,c) {a,b,c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {a,b,c})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {a})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {print(x)})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {print(a)})})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {print(a))})}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {print(a)}))}
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {print(a)}))
sapply(dt.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {c})})})
sapply(dT.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {c})})})
t(sapply(dT.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {c})})}))
sapply(dT.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {a})})})
sapply(dT.indMetrics, function(a) {
sapply(dT.ind,        function(b) {
sapply(dT.strategy,   function(c) {b})})})
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
mapply(function(x) {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
mapply(function(x) {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
g
y
mapply(function(x) {g[y[x,]][,c(9,11:13)]} {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]}, {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]}, {g}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
g[y[x,]]
g[y[1,]]
{g[y[x,]][,c(9,11:13)]}
g[y[x,]][,c(9,11:13)]}
g[y[x,]][,c(9,11:13)]
g[y[1,]][,c(9,11:13)]
t(g[y[1,]][,c(9,11:13)])
indicators(t(g[y[1,]][,c(9,11:13)]))
indicators(unlist(g[y[1,]][,c(9,11:13)])))
indicators(unlist(g[y[1,]][,c(9,11:13)]))
indicators(matrix(g[y[1,]][,c(9,11:13)]))
g[y[1,]][,c(9,11:13)]
g[y[1,]][,c(9,11:13)][1]
x <- 1
x
g[y[x,]][,c(9,11:13)][x]
g[y[x,]][,c(9,11:13)][x,]
g[y[x,]][,c(9,11:13)][x,x]
g[y[x,]][,c(9,11:13)][x][,x]
g[y[x,]][,c(9,11:13)][x,]
g[y[x,]][,c(9)][x,]
indicators(g[y[x,]][,c(9)],g[y[x,]][,c(11)], g[y[x,]][,c(12)], g[y[x,]][,c(13)])
g[y[1,]][,c(9,11:13)
g[y[1,]][,c(9,11:13)]
t<-g[y[1,]][,c(9,11:13)]
class(t)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
g
View(dT.sig)
View(dT.test2)
View(dT.test)
View(dT.test1)
setkeyv(dT.test1, keycols)
mapply(function(x) {table(g[dT.test1[x,]][,c(9,11:13)])}, as.integer(rownames(dT.test1)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)]) %>%
table(g[y[x,]][,c(9,11:13)])},
as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[dT.test1[x,]][,c(9,11:13)])}, as.integer(rownames(dT.test1)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[dT.test1[x,]][,c(9,11:13)])}, as.integer(rownames(dT.test1)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[dT.test1[x,]][,c(9,11:13)])%>% x }, as.integer(rownames(dT.test1)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)]) %>% y }, as.integer(rownames(y)), SIMPLIFY = FALSE)
Q
Q
Q
Q
y
mapply(function(x) {table(g[y[x,]][,c(9,11:13)]) %>% x }, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)]) %>% x }, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}   , as.integer(rownames(y)), SIMPLIFY = FALSE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
setkeyv(dT.test1, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
g
y
(g[y[x,]][,c(9,11:13)]
(g[y[x,]][,c(9,11:13)])
(g[y[1,]][,c(9,11:13)])
(g[y[1,]][,c(6, 9,11:13)])
dT.name
dT.strategy
dT.ind
dT.strategy[dT.ind]
dT.strategy[dT.ind, allow.carestian = T]
dT.strategy[dT.ind, allow.cartestian = T]
dT.strategy[
dT.ind, allow.cartesian = T]
dT.strategy[
dT.ind, allow.cartesian = T][,c(6,8)]
dT.strategy[
dT.ind, allow.cartesian = T][,c(5,8)]
data.table::merge.data.table(dT.strategy, dT.ind)
dT.strategy[
dT.ind, allow.cartesian = T][,c(5,8)][, tname:= paste0(abbv,i.name)]
dT.trend <- dT.strategy[
dT.ind, allow.cartesian = T][,c(5,8)][, tname:= paste0(abbv,i.name)]
dT.trend
dT.trend
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
g[y[x,]][,c(9,11:13)]
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
setkeyv(dT.test1, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
g[y[1,]]
g[y[3,]][,c(9,11:13)]
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
g[y[x,]][,c(9,11:13)])
g[y[x,]][,c(9,11:13)]
g[y[y,]][,c(9,11:13)]
unique(g[y[y,]][,c(9,11:13)])
mapply(function(x) {table(unique(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(unique(g[y[x,]][,c(9,11:13)]))}, as.integer(rownames(y)), SIMPLIFY = FALSE)
rownames(y)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
source('~/GitHub/splGoldenDeathX/logs/testNestedFunction.r')
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
setkeyv(dT.test1, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
g[y[1,]]
g[y[3,]][,c(9,11:13)]
table(g[y[x,]][,c(9,11:13)])
table(g[y[x,]][,c(9,11:13)])
# Passing vector with multiple values into R function                           https://tinyurl.com/uy65emg
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
{g[y[2,]][,c(9,11:13)]}
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>%
x, as.integer(rownames(y)), SIMPLIFY = FALSE
)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>%
as.integer(rownames(y)), SIMPLIFY = FALSE
)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>%
as.integer(rownames(y)), SIMPLIFY = FALSE
)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
# Nesting Functions in R with the Piping Operator                               https://tinyurl.com/vhap722
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {x}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% [x,], as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
indicators(mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE))
mapply(function(x) {g[y[x,]][,c(9,11:13)]} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x,y){x^y},x=c(2,3),y=c(3,4))
mapply(function(y) {apply(y, 1, function(x) x[1],
as.integer(x[2]),
as.integer(x[3]),
x[4])}, table(g[y[x,]][,c(9,11:13)]))
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
apply(mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE),1 function(y) indicators( y[1], as.integer(y[2]), as.integer(y[3]), y[4]))
mapply(function(x) {table(g[y[x,]][,c(9,11:13)])} %>% {g[y[x,]][,c(9,11:13)]}, as.integer(rownames(y)), SIMPLIFY = FALSE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
mapply(function(x) {
apply(table(g[y[x,]][,c(9,11:13)]) %>% {x}, 1, function(x)
indicators(x[1], as.integer(x[2]),as.integer(x[3]),x[4]))},
as.integer(rownames(y)), SIMPLIFY = FALSE)
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
setkeyv(dT.test1, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
g[y[1,]]
g[y[3,]][,c(9,11:13)]
g <- dT.test1
keycols = c("id","i.id","i.id.1")
setkeyv(g, keycols)
setkeyv(dT.test1, keycols)
y<-unique(dT.test1[,c(1,3,8)])
setkeyv(y, keycols)
g[y[1,]]
g[y[3,]][,c(9,11:13)]
mapply(function(x) {
apply(table(g[y[x,]][,c(9,11:13)]) %>% {x}, 1, function(x)
indicators(x[1], as.integer(x[2]),as.integer(x[3]),x[4]))},
as.integer(rownames(y)), SIMPLIFY = FALSE)
