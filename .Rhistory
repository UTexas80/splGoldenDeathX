View(nXema_signal)
dt_nXema_signal <- as.data.table(nXema_signal, keep.rownames = TRUE)
dt_nXsma_signal <- as.data.table(nXsma_signal, keep.rownames = TRUE)
viewxl:::view_in_xl()
dt_gXsma_signal <- as.data.table(gXsma_mktdata_sig, keep.rownames = TRUE)
dt_gXema_signal <- as.data.table(gXema_mktdata_sig, keep.rownames = TRUE)
viewxl:::view_in_xl()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
trendSummaryGroup <- readRDS("~/GitHub/splGoldenDeathX/rds/trendSummaryGroup.rds")
View(trendSummaryGroup)
trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
trendSummaryGroup <- readRDS("~/GitHub/splGoldenDeathX/rds/trendSummaryGroup.rds")
View(trendSummaryGoldenSMA)
View(trendSummaryGroup)
glimpse(trendSummaryGroup)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
emaPct <- trendSummaryGroup[indicator == 'EMA', occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)]
View(emaPct)
smaPct <- trendSummaryGroup[indicator == 'SMA', occurrencePct := count/sum(count)][4:6, tradeDaysPct := tradeDays/sum(tradeDays)]
renderPlotly({
p <- plot_ly(type = "bar") %>%
add_bars( x = emaPct$catName, y = emaPct$tradeDaysPct, text = ~emaPct$indicator, textposition = 'auto',
marker = list(color =
c('rgba(0,0,0,1)'
,'teal'
,'purple'))) %>%
add_bars( x = smaPct$catName, y = smaPct$tradeDaysPct, text = ~smaPct$indicator, textposition = 'auto',
marker = list(color =
c('rgba(0,0,0,1)'
,'teal'
,'purple'))) %>%
layout(
yaxis = list(
title = 'Percent',
tickformat = "%"),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1,
showlegend = F)
})
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
trendSummaryGroup <- readRDS("~/GitHub/splGoldenDeathX/rds/trendSummaryGroup.rds")
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
occurrencePct := count/sum(count),
tradeDaysPct := tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
occurrencePct = .N/sum(.N),
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
rm(trendSummaryGroup)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
emaPct <- trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
smaPct <- trendSummaryGroup[4:6, occurrencePct := count/sum(count)][4:6, tradeDaysPct := tradeDays/sum(tradeDays)][4:6, c(2:5,8,7)]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
emaPct <- trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
smaPct <- trendSummaryGroup[4:6, occurrencePct := count/sum(count)][4:6, tradeDaysPct := tradeDays/sum(tradeDays)][4:6, c(2:5,8,7)]
trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)]
emaPct <- trendSummaryGroup[1:3, occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)]
emaPct
View(emaPct)
trendSummaryGroup = mutate(trendSummaryGroup,
occurrence_pct = count/sum(count),
tradeDays_pct = tradeDays/sum(tradeDays))
trendSummaryGroup
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL), # compute avg ret
tradeDaysPct = tradeDays/sum(tradeDays)
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
x = sum(.N),
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
n = 24L
set.seed(25)
DT <- data.table(
color = sample(c("green","yellow","red"), n, TRUE),
year = as.Date(sample(paste0(2011:2015,"-01-01"), n, TRUE)),
status = as.factor(sample(c("removed","active","inactive","archived"), n, TRUE)),
amount = sample(1:5, n, TRUE),
value = sample(c(3, 3.5, 2.5, 2), n, TRUE)
)
groupingsets(DT, j = c(list(count=.N), lapply(.SD, sum)), by = c("color","year","status"),
sets = list("color", c("year","status"), character()), id=TRUE)
DT
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = .(indicator, catName)]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = c(indicator, catName)]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = c("indicator", "catName")]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := sum(count) / sum( sum(count) ) * 100 , by = c("indicator", "catName")]
View(trendSummaryGroup)
styler:::style_selection()
addinmanager:::addin_manager()
addinslist:::addinslistAddin()
emaPct <- trendSummaryGroup[indicator=='EMA', occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
emaPct
emaPct <- trendSummaryGroup[indicator=='EMA', occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)]
emaPct
View(emaPct)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
]
View(trendSummaryGroup)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
][, c(2:5,8,7)]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
][, c(1:7)]
styler:::style_selection()
emaPct <- trendSummaryGroup[indicator == "EMA", occurrencePct := count / sum(count)][indicator == "EMA", tradeDaysPct := tradeDays / sum(tradeDays)]
View(emaPct)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
library(devtools)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trendReturnsDaily)
View(tRD)
cbind(dXema_rets,dXsma_rets,gXema_rets,gXsma_rets,nXema_rets,nXsma_rets)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(tRD)
View(nXema_rets)
View(nXema_ret)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
tRD
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trendReturns)
trendReturns
glimpse(trendReturns)
View(xtsPrice)
View(dtTrend)
View(xtsPriceSMA)
View(trendReturns)
viewxl:::view_in_xl()
View(trendReturns)
View(trendReturnsAnnualized)
View(trendReturnsDaily)
xtrendReturnsAnnual <- daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE)
xtrendReturnsAnnual
Return.annualized(xtrendReturnsAnnual)
y<-cbind(trendSummaryDeath[,1:3],
trendSummaryGolden[,2:3],
trendSummaryNeither[,2:4])
y
trendSummaryDeath
goldenEMA
trendReturnsAnnual
Return.annualized(trendReturnsAnnual)
View(trendReturnsAnnualized)
class(trendReturnsAnnual)
trendReturnsAnnual
dt_trendReturnsAnnual <- as.data.table(daily2annual.data.frame(trendReturnsDaily, FUN = sum, na.rm = TRUE), keep.rowanes = TRUE)
dt_trendReturnsAnnual <- daily2annual.data.frame(trendReturnsDaily, FUN = sum, na.rm = TRUE)
Return.annualized(trendReturnsAnnual)
class(Return.annualized(trendReturnsAnnual)
class(Return.annualized(trendReturnsAnnual))
as.data.table(Return.annualized(trendReturnsAnnual))
Return.cumulative(trendReturnsAnnual)
trendReturnsAnnual
trendReturnsDaily
viewxl:::view_in_xl()
dt_trendReturnsDaily <- as.data.table(trendReturnsDail, keep.rownames = TRUE)
dt_trendReturnsDaily <- as.data.table(trendReturnsDaily, keep.rownames = TRUE)
dt_trendReturnsDaily
viewxl:::view_in_xl()
trendReturnsAnnual
class(trendReturnsAnnual)
dt_trendReturnsAnnual <- as.data.table(trendReturnsAnnual)
dt_trendReturnsAnnual
dt_trendReturnsAnnual <- as.data.table(trendReturnsAnnual, keep.rownames = TRUE)
dt_trendReturnsAnnual
viewxl:::view_in_xl()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
addinslist:::addinslistAddin()
devtools::install_github('dreamRs/viewxl')
devtools::install_github('dreamRs/viewxl', force=TRUE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
viewxl:::view_in_xl()
View(trendReturnsDaily)
!is.na(trendReturnsDaily[,1])
index(!is.na(trendReturnsDaily[,1]))
!is.na(index(trendReturnsDaily[,1])))
!is.na(index(trendReturnsDaily[,1]))
dt_TRD <-as.data.table(trendReturnsDaily, keep.rownames = TRUE)
dt_TRD
dt_TRD[is.na(x),1]
dt_TRD[is.na(dXema),1]
dt_TRD[is.na(dXema),]
dt_TRD[!is.na(dXema),]
dt_TRD[!is.na(dXema),1:2]
dt_dXema <- dt_TRD[!is.na(dXema),1:2]
dt_dXsma <- dt_TRD[!is.na(dXema),c(1,3])
dt_dXsma <- dt_TRD[!is.na(dXema),c(1,3)]
dt_gXsma <- dt_TRD[!is.na(dXema),c(1,5)]
dt_gXema <- dt_TRD[!is.na(dXema),c(1,4)]
dt_nXema <- dt_TRD[!is.na(nXema),c(1,4)]
dt_gXema <- dt_TRD[!is.na(gXema),c(1,4)]
dt_gXsma <- dt_TRD[!is.na(gXsma),c(1,5)]
dt_nXema <- dt_TRD[!is.na(nXema),c(1,6)]
dt_nXsma <- dt_TRD[!is.na(nXsma),c(1,7)]
View(dt_dXema)
View(dt_dXsma)
View(dt_gXema)
View(dt_gXsma)
View(dt_ma_ema)
View(dt_nXema)
View(dt_nXsma)
viewxl:::view_in_xl()
dt_TRD[is.na(dXema),1]
dt_TRD[!is.na(dXema),1:2]
dt_dXema <- dt_TRD[!is.na(dXema),1:2]
View(dt_dXema)
viewxl:::view_in_xl()
rm(dt_dXsma)
dt_dXsma <- dt_TRD[!is.na(dXsma),1:3]
View(dt_dXsma)
dt_dXsma <- dt_TRD[!is.na(dXsma),1,3]
dt_dXsma <- dt_TRD[!is.na(dXsma),c(1,3)]
View(dt_dXsma)
viewxl:::view_in_xl()
rm(dt_gXema)
dt_gXema <- dt_TRD[!is.na(gXema),c(1,4)]
View(dt_gXema)
viewxl:::view_in_xl()
class(trendReturnsAnnual)
xts_dXema <- data.table::as.xts.data.table(dt_dXema)
xts_dXema
Return.annualized(xts_dXema)
Return.cumulative(xts_dXema)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trend_ind)
View(trend)
tolower(unique(trend[,1])[3 - 2),]
tolower(unique(trend[,1])[3 - 2,]
tolower(unique(trend[,1])[1,]
tolower(unique(trend[,1])[1,])
unique(trend[,1])[1,])
unique(trend[,1])[1,]
unique(trend[,1])[2,]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
view(trend)
unique(trend[,1])
[(as.numeric(input$radio2.2) - 2),]
unique(trend[,1])[1,]
unique(trend[,1])[2,]
order(unique(trend[,1]))[1,]
order(unique(trend[,1]))
unique(order(trend[,1])
unique(order(trend[,1]))
trend
unique(trend[,1])
order(unique(trend[,1]))
unique(order(trend[,1]))
is.data.table(trend)
data.table::setorder(trend[,1])
x<-data.table::setorder(trend[,1])
x
x<-data.table::setorder(unique(trend[,1]))
x
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
