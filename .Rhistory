View(dT.test2)
View(dT.test3)
View(dtEMA)
crossEMA
dt <- crossEMA
dt
dt <- data.frame(crossEMA)
dt
View(dt)
is.data.table(dt)
dt <- data.table(crossEMA)
is.data.table(dt)
dt
class(dt) <- "indicator"
getIndicators <- function(indicator_df) {
UseMethod("getIndicators")
}
getStockPlot.ema <- function(stocks_df){
print("Plot Stocks")
}
class(dt) <- "ema"
getIndicators(dt)
getIndicators.ema <- function(stocks_df){
print("Plot Indicators")
}
getIndicators(dt)
getIndicators(dt)
View(dT.ind)
dt_ind_ema <- data.table(crossEMA)
class(dt_ind_ema) <- "indicator"
get_Strategy <- function(dt_ind) {
UseMethod("get_Strategy")
}
class(dt_ind_ema) <- "ind"
get_Strategy.ind <- function(dt_ind){
print("Plot Indicators")
}
get_Strategy(dt_ind_ema)
dt_ind_ema <- data.table(crossEMA)
class(dt_ind_ema) <- "indicator"
get_Strategy <- function(dt_ind) {
UseMethod("get_Strategy")
}
class(dt_ind_ema) <- "ind"
get_Strategy.ind <- function(dt_ind){
print("Plot Indicators")
}
get_Strategy(dt_ind_ema)
# this calls getStockPlot.stock
dt_ind_ema <- data.table(crossEMA)
class(dt_ind_ema) <- "indicator"
get_Strategy <- function(dt_ind) {
UseMethod("get_Strategy")
}
class(dt_ind_ema) <- "ind"
get_Strategy.ind <- function(dt_ind){
print("Plot Strategy Indicators")
}
get_Strategy(dt_ind_ema)
dt_ind_ema
rm(dt_ind_ema)
dt_ind_ema <- data.table(crossEMA)
# add class to stock
class(dt_ind_ema) <- "ind"
# this is an abstract base method
get_Strategy <- function(dt_ind) {
UseMethod("get_Strategy")
}
# this is the implementation for "indicator" objects,
# you could have more for other "class" objects
get_Strategy.ind <- function(dt_ind){
print("Plot Strategy Indicators")
}
get_Strategy(dt_ind_ema)
install.packages("languageserversetup")
languageserversetup::languageserver_install()
languageserversetup::languageserver_add_to_rprofile()
install.packages("languageserversetup")
languageserversetup::languageserver_install()
languageserversetup::languageserver_add_to_rprofile()
devtools::install_github("gadenbuie/rsthemes")
library ('devtools')
install.packages("glue")
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(dT.test1)
View(dT.test)
View(dT.test2)
View(dT.test3)
View(dT.trend)
View(dT.strategy)
View(dT.ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(dT.trend)
View(dT.strategy)
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T, which = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dt>strategyName
dT.strategyName
View(dT.strategyName)
rm(dT.strategyName)
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- setDT(dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE])[,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- setDT(dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE][,c(2,5,8)][, tname:= paste0(abbv,i.name)])
dT.strategyName <- setDT(dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE]) %>% [,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- setDT(dT.strategy[
dT.ind, allow.cartesian = T, which = TRUE]) %>% dT.strategyName[,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T, row.names =T][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T, row.names =TRUE][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- as.data.table(dT.strategy[
dT.ind, allow.cartesian = T, row.names =TRUE])[,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- as.data.table(dT.strategy[
dT.ind, allow.cartesian = T, row.names =TRUE])
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T, which = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)])
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)])
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T])[,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T])[,c(2,5,8)][, tname:= paste0(abbv,i.name)][, .I[1]]
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T])[,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1]]
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T])[,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1], by =trend]
dT.strategyName <- row.names(dT.strategy[
dT.ind, allow.cartesian = T])[,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1]]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1], by=trend]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][, tname:=  .I[]]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][, id:=  .I[]]
dT.strategyName <- setcolorder( dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1], by=trend], c(5,1:4))
dT.strategyName <-  dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][,  .I[1], by=trend]
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][,c(2,5,8)][, tname:= paste0(abbv,i.name)][, id:=  .I[]]
setcolorder(dT.strategyName, c(5, 1:4))
View(dT.strategyName)
rm(dT.strategyName)
dT.strategyName <- dT.strategy[
dT.ind, allow.cartesian = T][
,c(2,5,8)][
, tname:= paste0(abbv,i.name)][
, id:=  .I[]]                                       # add row number
setcolorder(dT.strategyName, c(5, 1:4))
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(dT.strategy_ind_name)
dT.strategy_ind_name
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dimnames(trend_ind)
dimnames(trend_name)
View(trend.ind)
View(trend.strategy)
trend_ind <<-
setorder(
trend_name[
dT.indMetrics, allow.cartesian =T][
,c(1:2,5,4,7:9)][
, id:=  .I[]]
,tname)
trend_ind[, strategy_ind_id := rleid(tname)]
trend_name <<-
dT.strategy[                            # https://tinyurl.com/vajvn48
dT.ind, allow.cartesian = T][
,c(2,5,8)][
, tname:= paste0(abbv,i.name)][
, id:=  .I[]]                             # add row number
setcolorder(trend_name, c(5, 1:4))                    # column order
# ------------------------------------------------------------------------------
setkey(dT.indMetrics, "trend_id")
setkey(trend_name, "trend_id")
# ------------------------------------------------------------------------------
trend_ind <<-
setorder(
trend_name[
dT.indMetrics, allow.cartesian =T][
,c(1:2,5,4,7:9)][
, id:=  .I[]]
,tname)
trend_ind[, strategy_ind_id := rleid(tname)]
dimnames(trend_ind)
trend_ind
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
trend_name <<-
dT.strategy[                            # https://tinyurl.com/vajvn48
dT.ind, allow.cartesian = T][
,c(2,5,8)][
, tname:= paste0(abbv,i.name)][
, id:=  .I[]]                             # add row number
setcolorder(trend_name, c(5, 1:4))                    # column order
# ------------------------------------------------------------------------------
setkey(dT.indMetrics, "trend_id")
setkey(trend_name, "trend_id")
# ------------------------------------------------------------------------------
trend_ind <<-
setorder(
trend_name[
dT.indMetrics, allow.cartesian =T][
,c(1:2,5,4,7:9)][
, id:=  .I[]]
,tname)
trend_ind[, strategy_ind_id := rleid(tname)]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
dimnames(trend_ind)
View(trend_ind)
get_Strategy(trend_name, trend_ind)
setupInd
testInd(setupInd)
testInd <- function(trendInd) {
add.indicator(strategy.st,
name                 = trendInd[,4],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = trendInd[,6]),
label                = paste0(trendInd[,4],trendInd[,7]))
# print(name, x, n, label)
}
testInd(setupInd)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
View(setupInd)
setupInd[strategy_ind_id == j, c(4, 2, 6:7)]
setupInd[strategy_ind_id == 1, c(4, 2, 6:7)]
apply(setupInd[strategy_ind_id == 1, c(4, 2, 6:7)], 1,
function(x) testInd(setupInd))
str(getStrategy(setupTrend[1,5])$indicators)
ApplyIndicators(setupTrend[i,5])
ApplyIndicators(setupTrend[1,5])
View(g)
g <- dT.test1
keycols = c("id","i.id","i.id.1")
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
crossEMA
setupInd[, c(4, 2, 6:7)]
setupInd[]
View(dT.test1)
g[[paste(trendName, "mktdata", "ind", sep = "_")]]
g[[paste(trend_Name, "mktdata", "ind", sep = "_")]]
trend_name <<-
dT.strategy[                            # https://tinyurl.com/vajvn48
dT.ind, allow.cartesian = T][
,c(2,5,8)][
, tname:= paste0(abbv,i.name)][
, id:=  .I[]]                             # add row number
setcolorder(trend_name, c(5, 1:4))
g[[paste(trend_Name, "mktdata", "ind", sep = "_")]]
g[[paste(trend_name, "mktdata", "ind", sep = "_")]]
g[[paste("nXEma", "mktdata", "ind", sep = "_")]]
[[paste("nXEma", "mktdata", "ind", sep = "_")]]
[paste("nXEma", "mktdata", "ind", sep = "_")]
paste("nXEma", "mktdata", "ind", sep = "_")
View(nXema_mktdata_ind)
g
g[[x]]
g[[trend]]
foo <- setNames(  paste0(letters,1:26),  LETTERS)
foo
rm(g)
g[[paste(trendName, "perf", sep = "_")]]
r <- g[[paste(trendName, "returns", sep = "_")]] <-
PortfReturns(Account =  account.st)
setupTrend
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
setupTrend[,5]
trend_name
ApplyIndicators(setupTrend[1,5])
str(getStrategy(setupTrend[i,5])$indicators)
str(getStrategy(setupTrend[1,5])$indicators)
ApplyIndicators(setupTrend[1,5])
str(ApplyIndicators(setupTrend[1,5]))
setupTrend[1,5]
ApplyIndicators("dXema")
g[[paste(trendName, "mktdata", "ind", sep = "_")]]
g[[paste("trendName", "mktdata", "ind", sep = "_")]]
ApplyIndicators("dXema")
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
nXema
is.environment(g)
View(gXema_mktdata_ind)
View(gXema_mktdata_sig)
View(gXema_mktdata_ind)
View(gXema_mktdata_sig)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
traceback()
ApplyIndicators(nXema)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
setupTrend
setupTrend[i,5]
setupTrend[1,5]
apply(setupTrend[i,5], 1, function(x) ApplyIndicators(x))
apply(setupTrend[1,5], 1, function(x) ApplyIndicators(x))
is.data.table(setupTrend)
apply(setupTrend[i,5], 1, function(x) setup(x))
apply(setupTrend[1,5], 1, function(x) setup(x))
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
#       indicators(x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
#      apply(setupTrend[i,5], 1,
#        function(x) ApplyIndicators(x))
}
# str(getStrategy(setupTrend[i,5])$indicators)
}
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
#       indicators(x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
}
apply(setupTrend[i,5], 1,
function(x) ApplyIndicators(x))
}
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
#       indicators(x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
}
apply(setupTrend[i,5], 1,
function(x) ApplyIndicators(x))
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
#       indicators(x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
}
ApplyIndicators(nXema)
#   apply(setupTrend[i,5], 1,
#     function(x) ApplyIndicators(x))
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
str(getStrategy(setupTrend[i,5])$indicators)
}
applyIndicators(strategy = strategy.st, mktdata = SPL.AX)
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
strategy.st
applyIndicators(strategy.st, SPL.AX)
applyIndicators("dXema", SPL.AX)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
for (i in 1:length(setupTrend)) {
print(i)
apply(setupTrend[i,5], 1, function(x) setup(x))
for (j in 1:nrow(setupInd[strategy_ind_id == i])) {
print(j)
apply(setupInd[strategy_ind_id == j, c(4:7)], 1,
function(x) testInd(setupInd))
str(getStrategy(setupTrend[i,5])$indicators)
}
applyIndicators(as.character(setupTrend[1,5]), mktdata = SPL.AX)
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
trend.name
trend_name
setupTrend
is.data.table()
is.data.table(setupTrend)
setupTrend(1,5)
setupTrend[1,5]
str(setupTrend)
applyIndicators("dXEMA", SPL.AX)
View(trend_name)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
get_Strategy(trend_name, trend_ind)
trend_name
setupTrend
setupTrend[1,5]
ApplyIndicators(setupTrend[1,5])
strategy.st
ApplyIndicators(strategy.st)
ApplyIndicators(as.character(strategy.st))
ApplyIndicators("dXema")
ApplyIndicators("dXEMA")
View(Apply_Indicators)
g[[paste(trendName, "mktdata", "ind", sep = "_")]] <<-
applyIndicators(              # apply indicators
strategy                = strategy.st,
mktdata                 = SPL.AX)
g[[paste(trendName, "mktdata", "ind", sep = "_")]] <<-
applyIndicators(              # apply indicators
strategy                = strategy.st,
mktdata                 = SPL.AX))
paste(trendName, "mktdata", "ind", sep = "_") <<-
applyIndicators(              # apply indicators
strategy                = strategy.st,
mktdata                 = SPL.AX)
applyIndicators(              # apply indicators
strategy                = strategy.st,
mktdata                 = SPL.AX)
applyIndicators(
strategy                = strategy.st,
mktdata                 = SPL.AX)
applyIndicators(
strategy                = "strategy.st",
mktdata                 = SPL.AX)
applyIndicators(
strategy                = "dXema",
mktdata                 = SPL.AX)
str(getStrategy)
str(getStrategy(dXema))
str(getStrategy('dXema')$indicators)
out <- applyIndicators('dXema', SPL.AX)
tail(out)
strategy("example", store=TRUE)
getSymbols("SPY", src='yahoo')
add.indicator('example', 'SMA', arguments=list(x=quote(Ad(SPY)), n=20))
str(getStrategy('example')$indicators)
out <- applyIndicators('example', SPY)
tail(out)
