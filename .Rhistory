DT
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = .(indicator, catName)]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = c(indicator, catName)]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := `sum(count)` / sum( `sum(count)` ) * 100 , by = c("indicator", "catName")]
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL),  x = sum(return) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
][ , `percentage(counts)` := sum(count) / sum( sum(count) ) * 100 , by = c("indicator", "catName")]
View(trendSummaryGroup)
styler:::style_selection()
addinmanager:::addin_manager()
addinslist:::addinslistAddin()
emaPct <- trendSummaryGroup[indicator=='EMA', occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)][1:3, c(2:5,8,7)]
emaPct
emaPct <- trendSummaryGroup[indicator=='EMA', occurrencePct := count/sum(count)][1:3, tradeDaysPct := tradeDays/sum(tradeDays)]
emaPct
View(emaPct)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator, catName)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
]
View(trendSummaryGroup)
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
][, c(2:5,8,7)]
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup
l       <- list(dXema_trend, dXsma_trend, gXema_trend, gXsma_trend, nXema_trend, nXsma_trend)
trend   <- rbindlist(l)
# ------------------------------------------------------------------------------
trendSummaryGroup <- trend[, .(count = .N,                  # .N is nb per group
tradeDays = sum(tradeDays),  # compute count
return = sum(Pct.Net.Trading.PL) # compute avg ret
),
by = .(indicator, catName)][
order(indicator, catName)
]
trendSummaryGroup <- trendSummaryGroup[, .(occurrencePct = count/sum(count),
tradeDaysPct = tradeDays/sum(tradeDays)),
by = .(indicator)][
order(indicator)
][, c(1:7)]
styler:::style_selection()
emaPct <- trendSummaryGroup[indicator == "EMA", occurrencePct := count / sum(count)][indicator == "EMA", tradeDaysPct := tradeDays / sum(tradeDays)]
View(emaPct)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
library(devtools)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trendReturnsDaily)
View(tRD)
cbind(dXema_rets,dXsma_rets,gXema_rets,gXsma_rets,nXema_rets,nXsma_rets)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(tRD)
View(nXema_rets)
View(nXema_ret)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
tRD
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trendReturns)
trendReturns
glimpse(trendReturns)
View(xtsPrice)
View(dtTrend)
View(xtsPriceSMA)
View(trendReturns)
viewxl:::view_in_xl()
View(trendReturns)
View(trendReturnsAnnualized)
View(trendReturnsDaily)
xtrendReturnsAnnual <- daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE)
xtrendReturnsAnnual
Return.annualized(xtrendReturnsAnnual)
y<-cbind(trendSummaryDeath[,1:3],
trendSummaryGolden[,2:3],
trendSummaryNeither[,2:4])
y
trendSummaryDeath
goldenEMA
trendReturnsAnnual
Return.annualized(trendReturnsAnnual)
View(trendReturnsAnnualized)
class(trendReturnsAnnual)
trendReturnsAnnual
dt_trendReturnsAnnual <- as.data.table(daily2annual.data.frame(trendReturnsDaily, FUN = sum, na.rm = TRUE), keep.rowanes = TRUE)
dt_trendReturnsAnnual <- daily2annual.data.frame(trendReturnsDaily, FUN = sum, na.rm = TRUE)
Return.annualized(trendReturnsAnnual)
class(Return.annualized(trendReturnsAnnual)
class(Return.annualized(trendReturnsAnnual))
as.data.table(Return.annualized(trendReturnsAnnual))
Return.cumulative(trendReturnsAnnual)
trendReturnsAnnual
trendReturnsDaily
viewxl:::view_in_xl()
dt_trendReturnsDaily <- as.data.table(trendReturnsDail, keep.rownames = TRUE)
dt_trendReturnsDaily <- as.data.table(trendReturnsDaily, keep.rownames = TRUE)
dt_trendReturnsDaily
viewxl:::view_in_xl()
trendReturnsAnnual
class(trendReturnsAnnual)
dt_trendReturnsAnnual <- as.data.table(trendReturnsAnnual)
dt_trendReturnsAnnual
dt_trendReturnsAnnual <- as.data.table(trendReturnsAnnual, keep.rownames = TRUE)
dt_trendReturnsAnnual
viewxl:::view_in_xl()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
addinslist:::addinslistAddin()
devtools::install_github('dreamRs/viewxl')
devtools::install_github('dreamRs/viewxl', force=TRUE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
viewxl:::view_in_xl()
View(trendReturnsDaily)
!is.na(trendReturnsDaily[,1])
index(!is.na(trendReturnsDaily[,1]))
!is.na(index(trendReturnsDaily[,1])))
!is.na(index(trendReturnsDaily[,1]))
dt_TRD <-as.data.table(trendReturnsDaily, keep.rownames = TRUE)
dt_TRD
dt_TRD[is.na(x),1]
dt_TRD[is.na(dXema),1]
dt_TRD[is.na(dXema),]
dt_TRD[!is.na(dXema),]
dt_TRD[!is.na(dXema),1:2]
dt_dXema <- dt_TRD[!is.na(dXema),1:2]
dt_dXsma <- dt_TRD[!is.na(dXema),c(1,3])
dt_dXsma <- dt_TRD[!is.na(dXema),c(1,3)]
dt_gXsma <- dt_TRD[!is.na(dXema),c(1,5)]
dt_gXema <- dt_TRD[!is.na(dXema),c(1,4)]
dt_nXema <- dt_TRD[!is.na(nXema),c(1,4)]
dt_gXema <- dt_TRD[!is.na(gXema),c(1,4)]
dt_gXsma <- dt_TRD[!is.na(gXsma),c(1,5)]
dt_nXema <- dt_TRD[!is.na(nXema),c(1,6)]
dt_nXsma <- dt_TRD[!is.na(nXsma),c(1,7)]
View(dt_dXema)
View(dt_dXsma)
View(dt_gXema)
View(dt_gXsma)
View(dt_ma_ema)
View(dt_nXema)
View(dt_nXsma)
viewxl:::view_in_xl()
dt_TRD[is.na(dXema),1]
dt_TRD[!is.na(dXema),1:2]
dt_dXema <- dt_TRD[!is.na(dXema),1:2]
View(dt_dXema)
viewxl:::view_in_xl()
rm(dt_dXsma)
dt_dXsma <- dt_TRD[!is.na(dXsma),1:3]
View(dt_dXsma)
dt_dXsma <- dt_TRD[!is.na(dXsma),1,3]
dt_dXsma <- dt_TRD[!is.na(dXsma),c(1,3)]
View(dt_dXsma)
viewxl:::view_in_xl()
rm(dt_gXema)
dt_gXema <- dt_TRD[!is.na(gXema),c(1,4)]
View(dt_gXema)
viewxl:::view_in_xl()
class(trendReturnsAnnual)
xts_dXema <- data.table::as.xts.data.table(dt_dXema)
xts_dXema
Return.annualized(xts_dXema)
Return.cumulative(xts_dXema)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
View(trend_ind)
View(trend)
tolower(unique(trend[,1])[3 - 2),]
tolower(unique(trend[,1])[3 - 2,]
tolower(unique(trend[,1])[1,]
tolower(unique(trend[,1])[1,])
unique(trend[,1])[1,])
unique(trend[,1])[1,]
unique(trend[,1])[2,]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
view(trend)
unique(trend[,1])
[(as.numeric(input$radio2.2) - 2),]
unique(trend[,1])[1,]
unique(trend[,1])[2,]
order(unique(trend[,1]))[1,]
order(unique(trend[,1]))
unique(order(trend[,1])
unique(order(trend[,1]))
trend
unique(trend[,1])
order(unique(trend[,1]))
unique(order(trend[,1]))
is.data.table(trend)
data.table::setorder(trend[,1])
x<-data.table::setorder(trend[,1])
x
x<-data.table::setorder(unique(trend[,1]))
x
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
devtools::install_github("nevrome/wellspell.addin")
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
golden_ma_sigEMA
x <- as.xts(gXema_trend[,c(2,6)])
x[,1] <- 1
names(x)[1] <- "EMA"
y <- as.data.table(golden_ma_sigEMA)
z <- rbind(x,y)
rm(y)
rm(x)
rm(z)
x <- as.xts(gXema_trend[,c(2,6)])
x[,1] <- 1
names(x)[1] <- "EMA"
y <- golden_ma_sigEMA
z <- rbind(x,y)
View(z)
aDT <- as.data.table(z, keep.rownames = TRUE)
glimpse(aDT)
as.data.table(z)[, .SD[which.max(abs(value))], by=index]
as.data.table(z)[, .SD[which.max(abs(EMA))], by=index]
a<-as.data.table(z)[, .SD[which.max(abs(EMA))], by=index]
View(a)
rm(a)
a<-as.xts(as.data.table(z)[, .SD[which.max(abs(EMA))], by=index])
class(a)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
trendReturnsDaily[2002]
trendReturnsDaily['2002']
trendReturnsDaily['2003']
trendReturnsDaily[,3]['2003']
na.omit(trendReturnsDaily[,3]['2003'])
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003']))
Return.annualized(na.omit(trendReturnsDaily[,3]['2003']))
nrow(na.omit(trendReturnsDaily[,3]['2003']))
trendReturnsAnnual
trendReturnsAnnual <- daily2annual.zoo(na.omit(trendReturnsDaily), FUN = mean, na.rm = TRUE)
trendReturnsAnnual <- daily2annual.zoo(trendReturnsDaily, FUN = mean, na.rm = TRUE)
trendReturnsAnnual
trendReturnsAnnual <- daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE)
trendReturnsAnnual
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003']))
Return.cumulative(na.omit(trendReturnsDaily[,3]['2004']))
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003-09-12/2003-12-01']))
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003-09-11/2003-12-01']))
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003-09-11/2003-11-30']))
Return.cumulative(na.omit(trendReturnsDaily[,3]['2003-09-12/2003-12-01']))
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-01/2003-11-30']))
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-01/2003-11-30'])
trendReturnsDaily[,3]['2003-11-01/2003-11-30']
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-01/2003-11-30'], FUN = sum, na.rm = TRUE)
View(trendReturnsAnnualized)
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
quantmod::monthlyReturn(trendReturnsDaily)
periodReturn(trendReturnsDaily[,3],period='yearly',subset='2003-11-03::2003-11-28')
periodReturn(trendReturnsDaily[,3],period='yearly',subset='2003-11-03/2003-11-28')
periodReturn(trendReturnsDaily[,3],period='yearly',subset='2003-11')
periodReturn(trendReturnsDaily[,3],period='monthly',subset='2003-11')
periodReturn(trendReturnsDaily[,3],period='monthly',subset='2003')
periodReturn(trendReturnsDaily[,3],period='monthly',subset='2003::2012')
periodReturn(trendReturnsDaily[,3],period='yearly',subset='2003::2012')
periodReturn(trendReturnsDaily[,3],period='yearly',subset='2002::2020')
periodReturn(trendReturnsDaily[,2],period='yearly',subset='2002::2020')
periodReturn(trendReturnsDaily[,2],period='annualReturn',subset='2002::2020')
trendReturnsDaily[,3][2003-11]
trendReturnsDaily[,3]['2003-11']
Return.cumulative(trendReturnsDaily[,3]['2003-11'])
Return.annualized(trendReturnsDaily[,3]['2003-11'])
nrows(trendReturnsDaily[,3]['2003-11'])
nrow(trendReturnsDaily[,3]['2003-11'])
Return.cumulative(SPL.AX[,3]['2003-11'])
Return.cumulative(SPL.AX[,2]['2003-11'])
Return.calculate(SPL.AX[,2]['2003-11'])
Return.calculate(SPL.AX[,1]['2003-11'])
daily2annual(trendReturnsDaily)
daily2annual(trendReturnsDaily, FUN)
})
daily2annual(trendReturnsDaily, FUN)
}
daily2annual(trendReturnsDaily, FUN)
daily2annual.zoo(trendReturnsDaily, FUN,na.rm = TRUE,)
daily2annual.zoo(trendReturnsDaily, FUN = SUM, na.rm = TRUE,)
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
SPL.AX[2003-11-28]
SPL.AX['2003-11-28']
SPL.AX['2003-11-03']
SPL.AX['2003-10-30']
SPL.AX['2003-10-31']
SPL.AX['2003-12-01']
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE)
View(gXema_stats)
View(gXema_trade_stats)
View(gXema_perf)
View(gXema_profit)
nrow(trendReturnsDaily[,3]['2003-11'])
Return.calculate(SPL.AX[,2]['2003-11'])
periodReturn(trendReturnsDaily[,3],period='monthly',subset='2003-11-04/2003-11-28')
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-04/2003-11-28'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-03/2003-11-28'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-04/2003-12-03'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-04/2003-12-01'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-03/2003-11-28'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-04/2003-11-28'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily['2003'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
monthly2annual(daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,))
monthly2annual(daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE), FUN = sum, na.rm = TRUE)
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
mean(daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)[,3])
mean(daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,))
mean(daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)[,3])
Return.annualized(trendReturnsDaily[,3])
Return.annualized(trendReturnsDaily[,3], geometric = FALSE)
Return.annualized(trendReturnsDaily[,3], geometric = TRUE)
Return.annualized(na.omit(trendReturnsDaily[,3]), geometric = TRUE)
Return.annualized(trendReturnsDaily[,3], scale=252)
monthly2annual(daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE), FUN = sum, na.rm = TRUE)
daily2monthly.zoo(trendReturnsDaily[,3]['2003-11-03/2003-11-28'], FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily[,3]['2003'], FUN = sum, na.rm = TRUE,)
daily2annual.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
daily2monthly.zoo(trendReturnsDaily, FUN = sum, na.rm = TRUE,)
apply.yearly(trendReturnsDaily,sum)
apply.yearly(trendReturnsDaily[,3],sum)
apply.yearly(trendReturnsDaily[,3],mean)
rets <- apply.monthly(trendReturnsDaily[,3], Return.cumulative)
rets
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
spy <- Quandl("EOD/SPY", type='xts', start_date='1990-01-01')
spyRets <- Return.calculate(spy$Adj_Close)
calendarReturnTable(spyRets, percent = FALSE)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
ROC(SPL.AX)
trendReturnsDaily
ROC(SPL.AX)[,1]
x<-merge(ROC(SPL.AX)[,1], trendReturnsDaily[,3]
x<-merge(ROC(SPL.AX)[,1], trendReturnsDaily[,3])
x
x<-merge(SPL.AX, ROC(SPL.AX)[,1], trendReturnsDaily[,3])
x
x<-merge(SPL.AX[,1], ROC(SPL.AX)[,1], trendReturnsDaily[,3])
x
addinexamples:::reformatAddin()
viewxl:::view_in_xl()
x<-as.data.table(merge(SPL.AX[,1], ROC(SPL.AX)[,1], trendReturnsDaily[,3]), keep.rownames = TRUE)
viewxl:::view_in_xl()
Return.annualized(trendReturnsDaily[,3])
Return.annualized(trendReturnsDaily[,3]['2004:2014'])
trendReturnsDaily[,3]['2004:2014']
Return.annualized(trendReturnsDaily[,3]['2004/2014'])
Return.annualized(trendReturnsDaily[,3]['2009/2014'])
Return.cumulative(trendReturnsDaily[,3]['2009/2014'])
Return.cumulative(trendReturnsDaily[,3]['2003/2014'])
Return.cumulative(trendReturnsDaily[,3]['2003/2019'])
Return.cumulative(trendReturnsDaily[,3]['2003/2020'])
Return.cumulative(trendReturnsDaily[,3]['2003-05-19/2020-04-19'])
Return.cumulative(trendReturnsDaily[,3]['2003-05-19/2019-04-19'])
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2019-04-19'])
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2020-04-19'])
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2020-05-19'])
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2020-05-19'], scale = 252)
Return.cumulative(trendReturnsDaily[,3], scale = 252)
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2020-05-19'], 252)
Return.cumulative(trendReturnsDaily[,3]['2004-05-19/2020-05-19'], 12)
Return.annualized(trendReturnsDaily[,3]['2004-05-19/2020-05-19'], 12)
Return.annualized(trendReturnsDaily[,3]['2004-05-19/2020-05-19'], 252)
Return.annualized(trendReturnsDaily[,3], 252)
View(gXema_perf)
View(gXema_profit)
View(gXsma_profit)
View(gXsma_pts)
View(gXsma_rets)
View(gXsma_risk)
View(gXsma_trade_stats)
View(gXsma_trend)
View(gXsma_wins)
blotter::getEndEq(gXema)
blotter::getEndEq(gXema, 2010)
blotter::getEndEq(gXema, 2020)
blotter::getEndEq(gXema, 2002)
blotter::getEndEq(gXema, 2004)
blotter::getEndEq(gXema, 2005)
blotter::getEndEq(gXsma, 2005)
blotter::getEndEq(gXsma, 2020)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
calendarDays <- readRDS("~/GitHub/splGoldenDeathX/dashboard/rds/calendarDays.rds")
View(y2)
calendarDays <- readRDS("~/GitHub/splGoldenDeathX/dashboard/rds/calendarDays.rds")
View(tRet)
View(trendSummaryGolden)
View(trendSummaryDeathEMA)
View(trendSummaryDeathSMA)
library(rsconnect)
rsconnect::accountInfo()
rsconnect::accountInfo('utexas80')
rsconnect::applications()
rsconnect::listBundleFiles(appDir)
rsconnect::showProperties()
rsconnect::showProperties(utexas80)
rsconnect::showLogs()
rsconnect::showLogs(utexas80)
rsconnect::showLogs('utexas80')
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r', echo=TRUE)
