print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser
print(paste("strategy state = ", strategy.st))
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
print(paste("strategy.st = ", strategy.st, sep = " "))
}
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
signal$name
paste(setupTrend[i,5], "signal", sep = "_")
paste(setupTrend[1,5], "signal", sep = "_")
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
strategy.st
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = dxEMA,
mktdata            = SPL.AX)
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = "dxEMA",
mktdata            = SPL.AX)
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = "dXema",
mktdata            = SPL.AX)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
strategy.st
SPL.AX
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
applySignals(strategy.st, SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals('dxEMA', SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(dxEMA, SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals('dxEMA', SPL.AX)
setupTrend
str(getStrategy(setupTrend[1,5])$signal)
str(getStrategy(setupTrend[2,5])$signal)
str(getStrategy(setupTrend[3,5])$signal)
str(getStrategy(setupTrend[4,5])$signal)
str(getStrategy(setupTrend[5,5])$signal)
str(getStrategy(gXsma)$signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
traceback()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
dT.sig[dt_ma][trend_name, allow.cartesian = T]
View(trend_name)
get_Strategy(trend_name, trend_ind, trend_signal
get_Strategy(trend_name, trend_ind, trend_signal)
View(setupSig)
viewxl:::view_in_xl()
View(setupSig)
setupSig[, c(2:4, 10:13, 19)]
View(dT.formula)
setkey(dT.formula, id)
s <- setupSig[, c(2:4, 10:13, 19)]
s <- data.table(setupSig[, c(2:4, 10:13, 19)], keep.rownames=T)
s
s$id = row.names(s)
s
setkey(s, id)
s[dT.formula]
glimpse(s)
s$id <- as.integer(s$id)
s
glimpse(s)
setorder(s, id)
s
s[dT.formula]
dT.formula
setid(s, id)
setkey(s, id)
setkeydT.formula, id
setkey(dT.formula, id
setkey(dT.formula, id)
s[dT.formula]
View(setupSig)
l <<-
as.data.table(
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16:19)],
keep.rownames = T
l <<-
as.data.table(
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16:19)],
keep.rownames = T)
l
nal <<-
setDT(
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)],
keep.rownames = T)
nal
signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
names(trend_signal)[6,7] <- c("strategy_ind_id", "strategy_name")
names(signal)[6,7] <- c("strategy_ind_id", "strategy_name")
names(signal)
names(signal)[6:7] <- c("x", "y")
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
names(trend_signal)[6:7] <- c("strategy_ind_id", "strategy_name")
trend_signal$id <- as.character(row.names(trend_signal))
trend_signal
setkey(trend_signal, id)
trend_signal[dT.formula]
glimpse(dT.formula)
trend_signal$id <- rownames(trend_signal)
trend_signal[dT.formula]
glimpse(trend_signal)
trend_signal$id <- as.integer(trend_signal$id)
trend_signal[dT.formula]
glimpse(trend_signal)
glimpse(dT.formula)
setid(dT.formula, id)
setkey(dT.formula, id)
trend_signal[dT.formula]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
# ------------------------------------------------------------------------------
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"                       # add class to trend_name
get_Strategy(trend_name, trend_ind, trend_signal)
Q
View(trend_signal)
trend_signal[dT.formula]
trend_signal[dT.formula][, c(, 8, 1:7, 10:11)]
trend_signal[dT.formula][, c(8, 1:7, 10:11)]
setkey(dT.trend, id)
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)][dT.trade]
trend_signal
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)][dT.trade, allow.cartesian = T]
trend_signal
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
names(trend_signal)[6,7,9] <- c("strategy_ind_id", "strategy_name", "formula_name")
names(trend_signal)[6,7,9]
names(trend_signal)[6:7,9]
names(trend_signal)[6:7]
names(trend_signal)[6:7,9]
names(trend_signal)[6:7:9]
names(trend_signal)[6,7,9]
names(trend_signal)[]
names(trend_signal)[6:9]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
setnames(trend_signal)[6:7,9], c("strategy_ind_id", "strategy_name", "formula_name"))
setnames(trend_signal[6:7,9], c("strategy_ind_id", "strategy_name", "formula_name"))
setnames(trend_signal,6:7,9,c("D","E,"E"))
setnames(trend_signal[],6:7,9],c("D","E,"E"))
setnames(trend_signal[,6:7,9],c("D","E,"E"))
setnames(trend_signal[,6:7,9],c("D","E","E"))
setnames(trend_signal,6:7,9,c("D","E","E"))
setnames(trend_signal[6:7,9],c("D","E","E"))
trend_signal[6:7,9]
trend_signal[6:7]
trend_signal[,6:7]
trend_signal[,6:7,9]
trend_signal[,c(6:7,9)]
names(trend_signal[,c(6:7,9)])
names(trend_signal[,c(6:7,9)]) <- c("a","b","c")
trend_signal
trend_signal[,c(6:7,9)][-1,] <- c("a","b","c")
trend_signal[,c(6:7,9)][-1,]
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
View(trend_signal)
,"E
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal
View(dt_ma)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
View(dt_ma)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
Q
View(trend_signal)
trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
n
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
trend_signal
trend_signal[dT.trade, on c(ma_id = id)]
trend_signal[dT.trade, on c('ma_id' = 'id')]
trend_signal[dT.trade, on = c('ma_id' = 'id')]
trend_signal[dT.formula]
View(dT.formula)
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
trend_signal <<- trend_signal[dT.formula]
setkey(trend_signal, id)
trend_signal <<- trend_signal[dT.formula]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:6, 10:12)]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:4, 10:12)]
trend_signal
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:5, 10:12)]
trend_signal
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:5, 11:12)]
trend_signal
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:4, 11:12, 5)]
trend_signal
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:5, 11:12)]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1,4,12, 2:3, 5, 11)]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10, 1:6, 10:12)]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10,1,4,12,2:3,11)]
trend_signal
rm(trend_signal)
trend_signal <<-
dT.sig[dt_ma][trend_name, allow.cartesian = T][
, c(1:4, 14, 16,19)]
trend_signal$id <- as.numeric(row.names(trend_signal))
setkey(trend_signal, id)
# trend_signal <<- trend_signal[dT.formula][, c(8, 1:7, 10:11)]
trend_signal <<- trend_signal[dT.formula][, c(8:10,1:2,5,12,3:4,11)]
trend_signal
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
get_Strategy.setup <- function(trendName, trendInd, trendSig) {
print("Setup Strategy")
browser()
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
setupSig   <<- setDT(trendSig)
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
apply(setupInd[strategy_ind_id == i, c(4:7)], 1,
function (x)
AddSignals(x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
print(paste("strategy state = ", strategy.st))
set_Signals(i,j)
apply(setupSig[strategy_ind_id == i, ], 1,
function (x)
AddSignals( x[5],                                                   # name - sigFormula
c( x[6] ),                                              # argument columns
x[7],                                                 # argument formula
x[8],                                                 # argument label  - trigger
x[9],                                                 # argument cross  - TRUE
x[10],                                                # label
)
str(getStrategy(setupTrend[i,5])$signals)
}
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
}
# ------------------------------------------------------------------------------
# For each row in an R dataframe                        https://tinyurl.com/wlae6xb
rows = function(x) lapply(seq_len(nrow(x)), function(i) lapply(x,function(c) c[i]))
# this is the implementation for "indicator" objects,
# you could have more for other "class" objects
get_Strategy.ind <<- function(trendInd){
print("setup Indicators")
z   <<- setDT(trendInd)
print(class(z))
for (i in 1:nrow(z)) {
add.indicator(strategy.st,
name                 = z[i,1],
arguments            = list(
x                    = quote(mktdata[,4]),
n                    = z[i,3]),
label                = z[i,4])
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
setupSig[strategy_ind_id == 1, ]
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"                       # add class to trend_name
class(trend_signal)   <- "setup"
get_Strategy(trend_name, trend_ind, trend_signal)
setupSig[strategy_ind_id == i, ]
get_Strategy <- function(trendName, trendInd, trendSig) {
UseMethod("get_Strategy")
}
# this is the implementation for "trend" objects,
# you could have more for other "class" objects
get_Strategy.setup <- function(trendName, trendInd, trendSig) {
print("Setup Strategy")
browser()
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
setupSig   <<- setDT(trendSig)
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
apply(setupInd[strategy_ind_id == i, c(4:7)], 1,
function (x)
indicators(
x[1],                                                   # name   - EMA/SMA
as.integer(x[2]),                                       # x      - quote(mktdata[,4]
as.integer(x[3]),                                       # n      - 20,50,100,200
x[4]))                                                  # label  - "020",050","100","200"
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
print(paste("strategy state = ", strategy.st))
#     set_Signals(i,j)
apply(setupSig[strategy_ind_id == i, ], 1,
function (x)
AddSignals( x[5],                                        # name - sigFormula
c( x[6] ),                                   # argument columns
x[7],                                      # argument formula
x[8],                                      # argument label  - trigger
x[9],                                      # argument cross  - TRUE
x[10],                                     # label
)
str(getStrategy(setupTrend[i,5])$signals)
}
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
}
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
setupSig
get_Strategy.setup <- function(trendName, trendInd, trendSig) {
print("Setup Strategy")
browser()
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
setupSig   <<- setDT(trendSig)
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
apply(setupInd[strategy_ind_id == i, c(4:7)], 1,
function (x)
indicators(
x[1],                                                   # name   - EMA/SMA
as.integer(x[2]),                                       # x      - quote(mktdata[,4]
as.integer(x[3]),                                       # n      - 20,50,100,200
x[4]))                                                  # label  - "020",050","100","200"
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
print(paste("strategy state = ", strategy.st))
#     set_Signals(i,j)
apply(setupSig[strategy_id == i, ], 1,
function (x)
AddSignals( x[5],                                        # name - sigFormula
c( x[6] ),                                   # argument columns
x[7],                                      # argument formula
x[8],                                      # argument label  - trigger
x[9],                                      # argument cross  - TRUE
x[10],                                     # label
)
str(getStrategy(setupTrend[i,5])$signals)
}
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
}
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind, trend_signal)
str(getStrategy(setupTrend[i,5])$signals)setupSig
setupSig
traceback()
Q
