mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[1,5])$signals)
ApplySignals(setupTrend[1,5])
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
apply(setupTrend[i,5], 1, function(x) setup(x))
i <- 2
apply(setupTrend[i,5], 1, function(x) setup(x))
i <- 1
apply(setupTrend[i,5], 1, function(x) setup(x))
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
View(setupTrend)
apply(setupTrend[5,5], 1, function(x) setup(x))
apply(setupTrend[5\6,5], 1, function(x) setup(x))
apply(setupTrend[6,5], 1, function(x) setup(x))
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
browser()
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[1,5])$signals)
ApplySignals(setupTrend[1,5])
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
setupTrend[1,5]
paste(setupTrend[i,5], "mktdata", "ind", sep = "_")
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]]
setupTrend[i,5])$indicators
dXema$indicators
View(nXema_mktdata_ind)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy(trend_name, trend_ind)
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy <- function(trendName, trendInd) {
UseMethod("get_Strategy")
}
# this is the implementation for "trend" objects,
# you could have more for other "class" objects
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[1,5])$signals)
ApplySignals(setupTrend[1,5])
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
i
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
ApplySignals(setupTrend[i,5])
}
}
}
setupTrend[i,5]
setupTrend[1,5]
string(setupTrend[i,5])
string(setupTrend[1,5])
ApplySignals(string(setupTrend[1,5]))
ApplySignals(setupTrend[1,5])
ApplySignals("dXema")
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
if (i == 5) {
print("i = 5")
}
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
ApplySignals(string(setupTrend[i,5]))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
browser()
print(j)
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
# ------------------------------------------------------------------------------
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = strategy.st,
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
setupTrend[i, 5]
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = setupTrend[i,5],
mktdata            = mktdata)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applySignals(
strategy           = setupTrend[1,5],
mktdata            = SPL.AX)
applySignals(setupTrend[1,5], mktdata            = SPL.AX)
setupTrend[1,5]
rm(dXema)
applySignals(setupTrend[1,5], mktdata            = SPL.AX)
setupTrend[1,5]
setupTrend
paste(setupTrend$abb, tolower(setupTrend$i.name))
paste0(setupTrend$abb, tolower(setupTrend$i.name))
paste0(setupTrend[i,3], tolower(setupTrend[i,5]))
paste0(setupTrend[1,3], tolower(setupTrend[1,5]))
paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
applySignals(
strategy           = paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
mktdata            = SPL.AX)
paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
applySignals(
strategy           = paste0(setupTrend[1,3], tolower(setupTrend[1,4]))
mktdata            = SPL.AX)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
print(paste("iteration = ", i, sep = " "))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser()
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
}
}
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
i <- 1
applySignals(
strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
mktdata            = SPL.AX)
str(getStrategy(setupTrend[i,5])$indicators)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
ProjectTemplate::migrate.project()
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
browser()
print(paste("iteration = ", i, sep = " "))
print(paste("strategy state = ", strategy.st))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser
print(paste("strategy state = ", strategy.st))
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
print(paste("strategy.st = ", strategy.st, sep = " "))
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
get_Strategy.setup <- function(trendName, trendInd) {
print("Setup Strategy")
setupTrend <<- setDT(trendName)
setupInd   <<- setDT(trendInd)
print("SetDT data.tables")
# ------------------------------------------------------------------------------ 1.0 Setup
for (i in 1:nrow(setupTrend)) {
browser()
print(paste("iteration = ", i, sep = " "))
print(paste("strategy state = ", strategy.st))
apply(setupTrend[i,5], 1, function(x) setup(x))
# ------------------------------------------------------------------------------ 2.0 Indicators
print(paste(" start iteration = ", i, sep = " "))
apply(setupInd[strategy_ind_id == i, c(4:7)], 1, function (x) indicators(
x[1], as.integer(x[2]), as.integer(x[3]), x[4]))
str(getStrategy(setupTrend[i,5])$indicators)
g[[paste(setupTrend[i,5], "mktdata", "ind", sep = "_")]] <-
applyIndicators(
strategy                = setupTrend[i,5],
mktdata                 = SPL.AX)
# ------------------------------------------------------------------------------3.0 Signals
for(j in 1:2) {
browser
print(paste("strategy state = ", strategy.st))
set_Signals(i,j)
str(getStrategy(setupTrend[i,5])$signals)
print(paste("i = ", i, sep = " "))
print(paste("strategy.st = ", strategy.st, sep = " "))
}
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
}
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
signal$name
paste(setupTrend[i,5], "signal", sep = "_")
paste(setupTrend[1,5], "signal", sep = "_")
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
strategy.st
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = dxEMA,
mktdata            = SPL.AX)
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = "dxEMA",
mktdata            = SPL.AX)
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = "dXema",
mktdata            = SPL.AX)
source('~/GitHub/splGoldenDeathX/splGoldenDeathX.r')
class(trend_name)     <- "setup"                       # add class to trend_name
class(trend_ind)      <- "setup"
get_Strategy(trend_name, trend_ind)
strategy.st
SPL.AX
applySignals(
#         strategy           = paste0(setupTrend[i,3], tolower(setupTrend[i,4])),
strategy           = strategy.st,
mktdata            = SPL.AX)
applySignals(strategy.st, SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals('dxEMA', SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals(dxEMA, SPL.AX)
g[[paste(setupTrend[i,5], "signal", sep = "_")]] <<-
applySignals('dxEMA', SPL.AX)
setupTrend
str(getStrategy(setupTrend[1,5])$signal)
str(getStrategy(setupTrend[2,5])$signal)
str(getStrategy(setupTrend[3,5])$signal)
str(getStrategy(setupTrend[4,5])$signal)
str(getStrategy(setupTrend[5,5])$signal)
str(getStrategy(gXsma)$signal)
